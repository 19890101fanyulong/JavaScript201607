->在谷歌浏览器控制台的NETWORK选项中可以查看 客户端和服务器端交互的 所有的请求的信息
  通过观察我们发现，一个页面加载完成基本上都需要客户端向服务器端发送很多的请求才能把所有的内容从服务器获取回来:
  首先获取的是HTML页面的源代码
  在浏览器渲染HTML的时候遇到LINK/SCRIPT/IMG...需要重新的再向服务器发送请求,把对应的源代码获取到,浏览器解析(HTTP请求)

  如果打开页面的时候需要的HTTP请求多的话,页面加载的速度就会变慢,为了提高页面第一次打开的速度,我们“尽量减少HTTP请求”:
  1)多个CSS/JS进行合并压缩,尽量保证页面中只有一个CSS/JS文件(GULP或者WEBPACK就是实现自动合并压缩的工具)
  2)如果CSS或者JS代码不多的话,尽量采用内嵌式而不是外链式
  3)动态图片做延迟加载(开始加载页面的时候真实图片不加载,用默认图占位,当页面加载完成后在加载第一屏幕或者第二屏幕的图片,其余的当滚动到对应区域的时候在加载)
  4)CSS SPRITE技术,把多张小的图片放在一张大图上,以后只把大图请求一次,其余的都使用background-position定位找到对应的小图即可
  5)图片BASE64技术
  6)AJAX/JSONP数据请求的时候,分批异步请求(分页/微博滚动到底部才加载更多)
  ...

->在客户端的URL地址栏中输入的网址
  http://www.zhufengpeixun.cn:80/jishuziliao/index.html?name=zhufeng&age=7#seven

  HTTP:协议(HTTPS/FTP),用来实现客户端和服务器端内容及数据传输的
  www.zhufengpeixun.cn:域名,需要通过域名到DNS服务器上找到项目所在服务器的IP地址
  80:端口号(0~65535),通过端口号找到服务器上具体的某一个项目

  jishuziliao/index.html:我们需要请求的资源文件的路径和名称,服务器获取到我们的请求,然后把对应资源文件中的源代码通过HTTP返回给客户端渲染

  ?name=zhufeng&age=7:问号传参,我们的客户端不仅仅可以从服务器端获取到数据和内容,还可以给服务器传递内容,问号传递参数就是向服务器发送内容的一种方式

  #seven:HASH值或者锚点定位,客户端可以通过这个标识进行一些额外的操作


->在NODE环境下执行JS
 1)在WEBSTROM中执行：JS文件中,右键"Run xxx.js"  (第一种方式有些时候会出现缓存)

 2)在DOS命令中执行：找到当前的JS所在的文件目录,SHIFT+右键,在此处打开命令窗口,打开我们的DOS命令框,在DOS窗口中输入"node xxx.js"这样也可以把某一个JS文件在NODE环境下执行  (推荐)

 3)在NODE的RPEL命令中执行JS代码：在DOS命令中输入node，然后在出现的编辑区域编写JS代码测试即可

 只要JS中的代码修改了，我们都需要重新的执行后才能有最新的效果


->NODE
  NODE是一个基于谷歌V8引擎用来解析渲染JS代码的平台，如果我们在服务器端安装了NODE，那么我们就可以用JS编写程序实现后台开发了


->真实项目中前后端分离各自的职责
  产品或者UI:分析产品,定结构,确定需求,设计产品原型图和效果图(PSD格式->PHOTO SHOP)
  前端:拿到产品的效果图,使用PS切图,把需要的图片切下来,并且可以测量出尺寸和颜色等；100%用HTML+CSS+HTML+CSS3还原设计图成为一个网页；在用JS或者类库插件把一些效果实现了；使用AJAX等技术向服务器发送一个请求，把需要展示的内容动态获取到，然后实现页面中数据的绑定(优秀前端的核心价值)；

  后端:(JAVA、C#、.NET、PHP、NODE(JS)...)发布项目(创建服务监听端口...)；接收到客户端的数据请求，把数据准备好，返回给客户端，或者把客户端传递的数据进行存储（一般都是存储到数据库中）

  测试:测试BUG


->我们把对文件的操作称之为I/O操作：可以创建文件夹,创建文件,向文件中写内容,从文件中获取内容...

  为了保证客户端的安全，运行在浏览器中的JS是不能操作用户电脑上的文件的
  运行在NODE环境中的JS是可以进行I/O操作的

->NODE是基于单线程异步操作的

->NODE中的模块
  1)内置模块：http(创建和操作服务的)、url(解析客户端的请求)、fs(文件I/O操作)...


  2)自定义模块：自己写的模块
    在NODE环境中,我们自己创建一个JS都相当于创建了一个模块
    模块之间是相互独立的,互不影响,在A模块中编写一个方法FN,在B模块中也编写一个方法叫做FN,相互之间不冲突

    模块之间的相互调取:在A模块中调取B模块中的SUM方法
    ->需要B模块把供外面使用的方法暴露出来
    ->在A模块中把B模块导入进来



  3)第三方模块：别人写的模块我们来使用  npm属于NODE管理第三方模块的操作命令
    https://www.npmjs.com/

    安装: npm install 模块名称 -g  安装到全局环境下,我们的每一个项目都可以使用这个模块了
    移除: npm uninstall 模块名称 -g

    例如:
    npm install less -g


->自己在本地的项目中创建好服务后，如何让客户端向本地的服务发送请求
  http://localhost:80/
  http://192.168.0.29:80/  (本机的IP地址)
