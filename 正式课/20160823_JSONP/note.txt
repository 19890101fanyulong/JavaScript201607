->同源和非同源
  第一个地址：浏览器URL地址栏中的地址
  第二个地址：我们从服务器获取数据的API接口地址
  [协议 域名 端口号]

  同源：两个地址中的三部分内容一模一样
  非同源(跨域)：两个地址中的三部分内容只要有一个不一样就是跨域

  URL:http://192.168.0.26:80/index.html
  API:http://matchweb.sports.qq.com/kbs/hotMatchList?callback=getHotMatchList
  ->我们自己的项目需要从腾讯体育的服务上获取数据,这个肯定是跨域了

  同源策略下的数据请求我们使用AJAX技术
  非同源策略下的数据请求我们使用JSONP等技术(思考题：回去百度查询常用的跨域方式除了JSONP还有哪些?)


->JSONP的原理
  利用了JS中的SCRIPT标签不存在域的限制(不管引入的是自己服务中的文件还是别人服务中的文件,不需要SCRIPT做任何的处理,都可以把引入的文件中的源代码获取到)，在HTML中和SCRIPT相同机制的还有IFRAME,所以使用IFRAME也可以实现跨域

  [自己的项目中发送JSONP请求]
  ->把获取数据并且跨域的API接口地址放在SCRIPT的SRC中,这样的话浏览器会帮助我们向远程的服务发送对应的请求
  ->在发送请求之前,我们给远程的服务通过问号传递参数的方式,传递一个函数过去,一般都写?callback=[function name]
    注意：JSONP请求的方式都是GET请求；我们需要把客户端的一个方法名传递给腾讯的服务，一般我们采用的都是callback=[function name]，腾讯的服务也是按照callback解析我们传递的参数名，但是这个不是唯一的，我们可以不使用callback传递，例如：?cb=[function name]，如果是这样传递的，那么腾讯的服务器将会按照cb解析函数名即可；

  [腾讯的服务器] 说明：我们的JSONP跨域请求是需要对方的服务器做特殊处理的,只有人家的服务器支持JSONP请求我们才可以获取到对应的数据
  ->接收到我们的请求,并且把传递进来的函数名获取到(解析URL,获取callback传递进来的值)
  ->腾讯的服务会把需要返回的数据连带函数名一起拼接成一个字符串：假设传递归来的函数名是getHotMatchList，腾讯服务器返回的字符串'getHotMatchList([腾讯需要给我们客户端返回的数据])'

  [自己的客户端浏览器]
  ->浏览器接收到腾讯服务器返回的内容，发现这个字符串的意思其实就是让getHotMatchList这个方法执行，然后给这个方法传递了参数值
  ->浏览器调取自己的引擎渲染返回的内容，此时getHotMatchList方法执行并且传递了参数值，我们可以在getHotMatchList方法中定义形参接收